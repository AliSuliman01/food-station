
extend type Query {

    ingredients(
        orderBy: _ @orderBy(columns: ["created_at", "updated_at", "id"])
        hasCategories: _ @whereHasConditions(columns:["name"])
        hasTranslation: _ @whereHasConditions(relation:"translation" columns:["name","description","notes"])
    ):[Ingredient]! @all

}
extend type Mutation{

    createIngredient(input: CreateIngredientInput! @spread):Ingredient @create
    updateIngredient(id: ID!, input: UpdateIngredientInput! @spread):Ingredient @update
    deleteIngredient(id: ID! @whereKey):Ingredient @delete

}

input IngredientsBelongsToMany{
    create:[CreateIngredientInput]
    connect:[ID!]
    sync:[ID!]
}
input CreateIngredientInput{
    translations:TranslationsMorphMany
    images:ImagesMorphMany
    categories:CategoriesMorphToMany
}
input UpdateIngredientInput{
    translations:TranslationsMorphMany
    images:ImagesMorphMany
    categories:CategoriesMorphToMany
}
