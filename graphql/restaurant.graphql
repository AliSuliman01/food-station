extend type Query {

    restaurants(
        orderBy: _ @orderBy(columns: ["created_at", "updated_at", "id"])
        where: _ @whereConditions(columns: ["name", "full_address"])
    ): [Restaurant]! @all

}

extend type Mutation {

    createRestaurant(input: CreateRestaurantInput! @spread):Restaurant
    @create
    @can(ability: "create")
    #    @inject(context: "user.id", name: "user_id")

    updateRestaurant(id:ID!, input: UpdateRestaurantInput! @spread):Restaurant
    @update
    @can(ability: "update")

    deleteRestaurant(id:ID! @whereKey):Restaurant @delete

}
input CreateRestaurantInput{
    name:String
    latitude:Float
    longitude:Float
    full_address:String
    user_id:ID
    cover_image_path:String
    images:ImagesMorphMany
}


input UpdateRestaurantInput{
    name:String
    latitude:Float
    longitude:Float
    user_id:ID
    full_address:String
    cover_image_path:String
    images:ImagesMorphMany
}


input RestaurantBelongsTo{
    connect:ID
}
#
